												Methods in Java
											
	In general, a method is a way to perform some task.
	Similarly, the method in Java is a collection of instructions that performs a specific task.
	It provides the reusability of code.
	We can also easily modify code using methods.
	
Method in Java
	A method is a block of code or collection of statements or a set of code grouped together to perform a certain task or operation.
	It is used to achieve the reusability of code. We write a method once and use it many times.
    We do not require to write code again and again.
    It also provides the easy modification and readability of code, just by adding or removing a chunk of code.
    The method is executed only when we call or invoke it.
	Method reduce the code size and increase the resuability of the code.
    The most important method in Java is the main() method.
    
Method Decleration
	The method declaration provides information about method attributes,
	such as visibility, return-type, name, and arguments.
	It has six components that are known as method header.
	
	Public int sum(int a , int b)        -->   Method Body
	Public				 - Access Modifier
	int   				 - Return type
	sum(int a, int b)	 - Method Signature
	
Naming a Method
	While defining a method, remember that the method name must be a verb and start with a lowercase letter.
    If the method name has more than two words, the first name must be a verb followed by adjective or noun.
    In the multi-word method name, the first letter of each word must be in uppercase except the first word.

 For example:

		Single-word method name: sum(), area()
		Multi-word method name: areaOfCircle(), stringComparision()
	
Types Of Methods:
	There are two types of methods in Java:

		Predefined Method
		User-defined Method
		
	Predefined Method
		In Java, predefined methods are the method that is already defined in the Java class libraries is known as predefined methods.
		It is also known as the standard library method or built-in method.
		We can directly use these methods just by calling them in the program at any point.
		Some pre-defined methods are length(), equals(), compareTo(), sqrt(), etc.
		When we call any of the predefined methods in our program, a series of codes related to the corresponding method runs in the background that is already stored in the library.
		Each and every predefined method is defined inside a class. Such as print() method is defined in the java.io.PrintStream class.
		It prints the statement that we write inside the method. For example, print("Java"), it prints Java on the console.

	User-defined Method
		The method written by the user or programmer is known as a user-defined method.
		These methods are modified according to the requirement.
		
Static Method
		A method that has static keyword is known as static method.
		In other words, a method that belongs to a class rather than an instance of a class is known as a static method.
		We can also create a static method by using the keyword static before the method name.

		The main advantage of a static method is that we can call it without creating an object.
		It can access static data members and also change the value of it.
		It is used to create an instance method.
		It is invoked by using the class name.
		The best example of a static method is the main() method.
		
Instance Method [Non-Static Method]
		The method of the class is known as an instance method.
		It is a non-static method defined in the class.
		Before calling or invoking the instance method, it is necessary to create an object of its class.
		 
There are two types of instance method:

		Accessor Method
		Mutator Method
		
		 Accessor Method:
				 The method(s) that reads the instance variable(s) is known as the accessor method.
				 We can easily identify it because the method is prefixed with the word get.
				 It is also known as getters. It returns the value of the private field.
				 It is used to get the value of the private field.
		 
		 Mutator Method:
				  The method(s) read the instance variable(s) and also modify the values.
				  We can easily identify it because the method is prefixed with the word set.
				  It is also known as setters or modifiers. It does not return anything. 
				  It accepts a parameter of the same data type that depends on the field.
				  It is used to set the value of the private field.
Abstract Method
		The method that does not has method body is known as abstract method. 
		In other words, without an implementation is known as abstract method. 
		It always declares in the abstract class. 
		It means the class itself must be abstract if it has abstract method.
		To create an abstract method, we use the keyword abstract.

		Syntax
		
		abstract void method_name()
		
Factory method
		It is a method that returns an object to the class to which it belongs.
		All static methods are factory methods.
	    For example, NumberFormat obj = NumberFormat.getNumberInstance();
		
		
Method Overloading In Java

		If a class has multiple methods having same name but different in parameters, 
		it is known as Method Overloading.
		Method Overloading is used to increase the readability of the program.
		It is performed within class.
		In this parameter must be different.
		It is the example of compile time polymorphism.
		
		Method Overloading can't be performed by changing return type of the method only.
		Return type can be same or different is method overloading .
		But you must have to change the parameter.
		
Method Overloading can be achieved in the following ways.
		1. Differes in Number of Parameters.
		2. Differs in the Data Type of the Parameters.
		3. Differs in the order of Parameters.
		
		In Java, Method Overloading is not possible by changing the return type of the method only,
		because of ambiguity.
		
		Compile Time Error is better than Run Time Error.
	    So, java compiler renders compiler time error if you declare the same method having same parameters.
		
		Can we overload java main() method?
        Yes, by method overloading. You can have any number of main methods in a class by method overloading.
        But JVM calls main() method which receives string array as arguments only.
		

Method Overriding

		Declaring a method in sub-class which is already present in parent class is known as method overriding.
												[OR]
				
	    If subclass (child class) has the same method as declared in the parent class, it is known as method overriding in Java.
	    
	    A subclass provides the specific implementation of the method that has been declared by one of its parent class, 
	    it is known as method overriding.

		Usage of Java Method Overriding
		Method overriding is used to provide the specific implementation of a method which is already provided by its superclass.
		Method overriding is used for runtime polymorphism
		
		Rules for Java Method Overriding
		
		The method must have the same name as in the parent class
		The method must have the same parameter as in the parent class.
		There must be an IS-A relationship (inheritance).
		
		Can we override static method?
			No, a static method cannot be overridden. It can be proved by runtime polymorphism, so we will learn it later.

		Why can we not override static method?
			It is because the static method is bound with class whereas instance method is bound with an object. Static belongs to the class area, and an instance belongs to the heap area.

		Can we override java main method?

			No, because the main is a static method.
			
			
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	